version: "3.9"

services:
  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: tradingbot-api
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=production
      - PORT=8001
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - api_data:/app/api/db
      - core_data:/app/db
    networks:
      - tradingbot-network
    restart: unless-stopped
    depends_on:
      - core

  # React Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
    container_name: tradingbot-client
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    networks:
      - tradingbot-network
    restart: unless-stopped
    depends_on:
      - api

  # Core Trading Logic
  core:
    build:
      context: .
      dockerfile: src/Dockerfile
      target: production
    container_name: tradingbot-core
    environment:
      - NODE_ENV=production
    volumes:
      - core_data:/app/db
      - backtest_data:/app/backtest_data
      - cache_data:/app/cache
    networks:
      - tradingbot-network
    restart: unless-stopped
    command: ["node", "dist/bot.js"]

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: tradingbot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tradingbot-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  api_data:
    driver: local
  core_data:
    driver: local
  backtest_data:
    driver: local
  cache_data:
    driver: local
  redis_data:
    driver: local

networks:
  tradingbot-network:
    driver: bridge
