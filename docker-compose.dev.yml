version: "3.9"

services:
  postgres-dev:
    image: postgres:16-alpine
    container_name: tradingbot-postgres-dev
    environment:
      - POSTGRES_USER=trading
      - POSTGRES_PASSWORD=trading
      - POSTGRES_DB=tradingbot
    ports:
      - "5433:5432"
    volumes:
      - pg_dev_data:/var/lib/postgresql/data
    networks:
      - tradingbot-dev-network
    restart: unless-stopped
  # Development API Service
  api-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: tradingbot-api-dev
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=development
      - PORT=8001
      - FRONTEND_URL=http://localhost:3000
      - DATABASE_URL=postgresql://trading:trading@postgres-dev:5432/tradingbot
      - CACHE_DB_PATH=/app/db/cache.db
    volumes:
      - ./api:/app/api
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - api_dev_data:/app/api/db
      - core_dev_data:/app/db
    networks:
      - tradingbot-dev-network
    restart: unless-stopped
    command: ["yarn", "dev:server"]
    depends_on:
      - redis-dev
      - postgres-dev

  # Development React Client
  client-dev:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: base
    container_name: tradingbot-client-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8001
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - tradingbot-dev-network
    restart: unless-stopped
    command: ["yarn", "dev", "--host", "0.0.0.0"]
    depends_on:
      - api-dev

  # Development Core Trading Logic
  core-dev:
    build:
      context: .
      dockerfile: src/Dockerfile
      target: base
    container_name: tradingbot-core-dev
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://trading:trading@postgres-dev:5432/tradingbot
      - CACHE_DB_PATH=/app/db/cache.db
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - core_dev_data:/app/db
      - backtest_dev_data:/app/backtest_data
      - cache_dev_data:/app/cache
    networks:
      - tradingbot-dev-network
    restart: unless-stopped
    command: ["yarn", "bot"]
    depends_on:
      - redis-dev

  # Redis for caching
  redis-dev:
    image: redis:7-alpine
    container_name: tradingbot-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - tradingbot-dev-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Database initialization service
  db-init:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: tradingbot-db-init
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://trading:trading@postgres-dev:5432/tradingbot
    volumes:
      - ./api:/app/api
      - ./src:/app/src
      - api_dev_data:/app/api/db
      - core_dev_data:/app/db
    networks:
      - tradingbot-dev-network
    command: ["yarn", "db:init"]
    depends_on:
      - redis-dev
      - postgres-dev

volumes:
  pg_dev_data:
    driver: local
  api_dev_data:
    driver: local
  core_dev_data:
    driver: local
  backtest_dev_data:
    driver: local
  cache_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  tradingbot-dev-network:
    driver: bridge